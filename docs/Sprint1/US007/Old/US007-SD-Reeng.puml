@startuml
'https://plantuml.com/sequence-diagram

title US007 - As Director, I want to associate a human resource (user) to a project

autoactivate on
autonumber

participant ":CreateResourceIn\nAProjectRoute" as Route
participant ":Resource\nController" as Ctrl
participant "srv:CreateResourceInAProjectService" as srv
participant "sysUsRepo:ISystemUserRepo" as systemUserStore
participant "projRepo:IProjectRepo" as projectStore
participant "resFac:IResourceFactory" as resourceFactory
participant "resRepo:IResourceRepo" as resourceStore
participant "res : Resource" as resource
participant "projectTeam: \n List<Resources>" as projectTeam
participant "userResources: \n List<Resources>" as resourceProjects
participant "project: Project" as project
participant "dsrv:DomainService\nResourceValidation" as domainService
participant "map:ResourceMapper" as map
participant "outDto:OutputResourceDto" as outDto
participant "exception :Exception" as exc
participant "responseJson:ResponseEntity" as json

[o-> Route:  POST/resources(json)
Route -> Ctrl: createResource (inDto)
note right Route: Json object was deserialize to a CreateResourceDto object
Ctrl -> srv: createAndSaveResource (inDto)

note over srv : The creation of these ids are hidden to simplify the diagram.
srv -> systemUserStore: findUserResult: \nexistsBySystemUserId(systemUserId)
deactivate systemUserStore
srv -> projectStore: project : findByProjectId(projectId)
deactivate projectStore
alt if user and project exist
srv -> resourceFactory: res: createResource(inDto)
note over resourceFactory : All parameters (value objects) are instantiated in their own factory.
resourceFactory -> resource**: createResource(resourceId, \nendDate, costPerHour, allocation)
opt if the request has a role
note over resourceFactory : Chose a role to creation of the resource are optional
resourceFactory -> resource :defineRole(role)
deactivate resourceFactory
deactivate resource
end

srv -> resourceStore: projectTeam: findAllByProjectId(projectId)
resourceStore-> projectTeam**: create()
deactivate
srv -> resourceStore: userResources: findAllBySystemUserId(systemUserId)
resourceStore -> resourceProjects**: create()
deactivate

srv -> domainService: validateResourceCreation(project, res, projectTeamList, resourceProjectsList)
domainService -> project: isInsideProjectPeriod(date)
deactivate
domainService -> domainService: validateAllocation(resourceProjectsList, res)
deactivate
domainService -> domainService: validateProjectRole(res, projectTeamList)
deactivate
domainService --> srv: validateNewResourceResult
alt if the criteria of the allocation a resource in a project are met
srv -> resourceStore: resource: save(res)
ref over resourceStore: [[US007-SD-JPA.puml]]

deactivate

alt if the new resource was successfully saved
srv -> map : outDto: model2Dto(resource)
map --> outDto** : create()
deactivate

else new resource was not saved
srv --> exc** : create(errorMessage)
end
else new resource not be valid
srv --> exc** : create(errorMessage)
end
else user or project does not exist
srv --> exc** : create(errorMessage)
end
srv --> Ctrl: outDto
Ctrl --> json**: create(outDto)
Ctrl --> Route: responseJson
[<--Route: response

@enduml