@startuml
'https://plantuml.com/class-diagram

title US013 - "As Administrator, I want to create user profiles"

skinparam classAttributeIconSize 0

package "Infrastruture" <<rectangle>> #lightblue {
class "CreateUserProfileRouter"  as route << Component >>
}


package "Interface Adapters" <<rectangle>> #lightgreen {

package "Controllers" <<rectangle>>  {
class "CreateUserProfileController" as ctrl <<Component>> {
+createUserProfile(json)
}
}

package "Repositories" <<rectangle>>{
class "UserProfileStore" as Store << Repository >> {
-profiles: List<UserProfile>
+saveUserProfile(userProfileName)
+existsByDescription(userProfileName)
}
}
}


package "Application Service" <<Rectangle>> #lightpink{
package "UserProfile Service" <<rectangle>>{
class "CreateUserProfileService" as srv << Service >> {
+createAndSaveUserProfile(dto)
}
}


package "Factory Interface" <<rectangle>>{
interface "UserProfileFactoryRepository" as ifactory{
+createUserProfile(dto)
}
}

package "Repository Interface" <<rectangle>>{
interface "UserProfileRepository" as repo{
+saveUserProfile(newUserProfile)
+existsByDescription(userProfileName)
}
}

}

package "Domain" <<Rectangle>> #burlywood{
package "Aggregates" <<rectangle>>{

package "UserProfile" <<Rectangle>>{
entity "UserProfile" as profile << Root >> {
- userProfileId : UserProfileID
+ getUserProfileID()
}
}
}

package "Value Object" <<rectangle>>{
class "UserProfileId" as upid << Value Object >> {
-userProfileID : UserProfileID
+userProfileID()
}
}

package "Factory" <<rectangle>>{
class "UserProfileFactory" as Factory << Factory >> {
+createUserProfile (userProfileID)
}
}
}

package "DTO" <<rectangle>>{
class "UserProfileMapper" as map <<Component>> {
+ toDto(newUserProfile)
}

class "UserProfileDTO" as dto <<Component>>{
- dto.userProfileName
}


class "OutputUserProfileDTO" as output <<Component>>{
- dto.userProfileName
}
}


route .d.> ctrl
Store .d.|> repo
srv ..l.> map
srv .d.> ifactory
Store "1"*---"*" profile
srv .d.> repo
Factory ..u..|> ifactory
profile "1"*--"*" upid
ctrl ...d.> srv
srv .d.> dto
srv .d.> output





@enduml