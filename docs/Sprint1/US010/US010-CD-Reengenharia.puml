@startuml
'https://plantuml.com/class-diagram

'hide circle
skinparam classAttributeIconSize 0

title US010 - As Authenticated user, i want to update its own data (e.g. photo, function...)

skinparam classAttributeIconSize 0

package "Infrastructure" <<Folder>> #lightblue  {
class "UpdatePersonalDataRoute" as route << Component >>
}

package "Interface Adapter" <<Folder>> #lightgreen {
package "Controllers" <<Folder>>{
class "SystemUserController" as controller << Component >> {
+updatePersonalData(json)
}
}
package "Repositories" <<Folder>>{
class "SystemUserRepository" as repository << Repository >> {
-systemUser : List<SystemUser>
+ findSystemUserByID(email)
}
}
}
package "Application Service API" <<Package>> #lightpink{
package "App Service" <<Folder>>{
class "UpdatePersonalDataService" as service << Component >> {
+updatePersonalData(updateUserDTO)
}
}
package "Repositories Interface" <<Folder>>{
interface "ISystemUserRepository" as interfaceSystemUserRepo << Interface >>{
+ findSystemUserByID(email)
}
}
}
package "DTO" <<Folder>> {
package "UpdateUserDTO" <<Folder>>{
class "UpdateUserDTO" as dto << Component >> {
- email : Email
- userName : Name
- function : Function
- photo : Photo
}
class "OutPutUpdateUserDTO" as outputDTO << Component >> {
- userName : Name
- function : Function
- photo : Photo
}
}
package "DTO" <<Folder>> {
package "SystemUserMapper" <<Folder>>{
class "SystemUserMapper" as mapper << Component >> {
+ modelToDto(systemUser)
}
}
}

package "Domain" <<Folder>> #burlywood{
package "Aggregate" <<Folder>>{
class "SystemUser" as systemuser << Root >> {
- systemUserID : SystemUserID
- userName : UserName
- photo : Photo
- password : Password
- function : Function
- isActive : false
+ SystemUser(systemUserID, username, photo, password, \n passwordConfirmation, function, userProfileID)
}
}

route ..> controller
controller ..> service
service .right.> dto
service ..|> interfaceSystemUserRepo
repository ..> interfaceSystemUserRepo
service ..> systemuser
service .down.> mapper
mapper ..> outputDTO

@enduml