@startuml
'https://plantuml.com/sequence-diagram

title US004 - As Administrator, I want to search for users

autonumber

actor Administrator as actor
participant ": SearchUsersByParamsRoute" as route
participant ": UsersController" as ctrl
participant "inputDto : SearchUserDto" as dataDto
participant ": SearchUsersByParamsService" as srv
participant ": ISystemUserRepo" as userStore
participant ": IUserProfileRepo" as profileStore
participant "usersFounded : List<SystemUser>" as users
participant "usersFoundedDto : List<UserDto>" as usersDto
participant "user : SystemUser" as user
participant ": SystemUserMapper" as map
participant "userDto : UserDto" as dto
participant "usersJson : ResponseEntity" as listJson

activate actor
autoactivate on

actor -> route : POST /users/search
note over actor, route : The parameters (name, email, profile, function and state) will be in the body of the request. At least, one of than must be typed or chosen.
route -> ctrl: searchUsersByTypedParams(inputDto)
ctrl -> srv: searchUsersByTypedParams(inputDto)
srv -> srv : checkWhichParamsHave(inputDto)
note right srv : This method will set the attributes of this service class with what is in the inputDto.
deactivate
opt if profile not null
srv -> profileStore: existById(profile) : true
deactivate
end
alt depending on which params came from inputDto, the service class will invoke the respective method
srv -> userStore: findAllBy...()
userStore --> users**: create()
userStore --> srv: usersFounded
end
srv --> usersDto**: create()
srv -> map: model2Dto(user)
note over map : The sequence of this method are hidden to simplify the diagram.
map --> srv: usersFoundedDto
srv --> ctrl: usersFoundedDto
ctrl --> listJson**: create(usersFoundedDto)
ctrl --> route: usersJson
route --> actor: Show the list of user founded by typed/chosen parameters


@enduml