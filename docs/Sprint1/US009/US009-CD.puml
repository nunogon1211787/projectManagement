@startuml
'https://plantuml.com/class-diagram

'hide circle
skinparam classAttributeIconSize 0

title US009 - As Product Owner, I want to create a user story and add it to the Product Backlog

skinparam classAttributeIconSize 0

package "Infrastructure" <<Rectangle>> #lightblue  {
package "Route" {
class "CreateUserStoryRoute" as route << Component >>
}

    package "Persistence" {
    class "IUserProfileRepositoryJpa" as jpa <<Interface>>
    }
}

package "Interface Adapter" <<Rectangle>> #lightgreen {
package "Controllers" <<Rectangle>>{
class "UserStoryController" as ctrl << Component >> {
+createUserStory(json)
}
}
package "Repositories" <<Rectangle>>{
class "UserStoryRepository" as store << Repository >> {
-userStoryList : List<UserStory>
+ save(newUserStory)
+ existsByUserStoryId(UserStoryID)
}
}
}

package "Application Service" <<Rectangle>> #lightpink{
package "App Service" <<Rectangle>>{
class "CreateUserStoryService" as service << Component >> {
+createAndSaveUserStory(createUserStoryDTO)
}
}
package "Repositories Interface" <<Rectangle>>{
interface "IUserStoryRepo" as repo << Interface >>{
save(newUserStory)
existsByUserStoryId(UserStoryID)
}
}
package "Factory Interface" <<Rectangle>>{
interface "IUserStoryFactory" as factoryInterface << Interface >>{
createUserStory(createUserStoryDTO)
}
}
}

package "DTO" <<Rectangle>> {
class "UserStoryMapper" as mapper << Component >> {
+ toDto(newUserStory)
}
class "OutputUserStoryDTO" as outdto << Component >> {
- userStoryID : String
- projectID : String
- title : String
- priority : int
- description : String
- timeEstimate : double
}
class "CreateUserStoryDTO" as dto << Component >> {
- projectID : String
- title : String
- priority : int
- description : String
- timeEstimate : double
}
}

package "Domain" <<Rectangle>> #burlywood{
package "Aggregate" <<Rectangle>>{
class "UserStory" as userStory << Root >> {
- userStoryID : UserStoryID
- projectID : ProjectID
- title : UsTitle
- priority : UsPriority
- description : Description
- timeEstimate : UsHour
+ UserStory(userStoryID)
}
}
package "Factory" <<Rectangle>>{
class "UserStoryFactory" as userStoryF << Factory >> {
+createUserStory(createUserStoryDTO)
}
}
package "Value Object" <<Rectangle>>{
class "UserStoryID" as usID << Value Object >> {
-projectID : ProjectID
-usTitle : UsTitle
+checkUsID(projectID, usTitle)
}
class "ProjectID" as projID << Value Object >> {
-rojectID : ProjectID
+checkUsID()
}
class "UsTitle" as usTitle << Value Object >> {
- title : UsTitle
+checkUsID()
}
class "Priority" as priority << Value Object >> {
-priority : UsPriority
+checkUsID()
}
class "Description" as desc << Value Object >> {
-description : Description
+checkUsID()
}
class "TimeEstimate" as time << Value Object >> {
-timeEstimate : UsHour
+checkUsID()
}
}
}

  package "Data Model" <<Rectangle>>{
        class "UserStoryJpaAssembler" as assemblerjpa <<Component>> {
        +toData (userStory)
        +toModel(userStoryJpa)
        }

        class "UserStoryJpa" as USjpa {
        -userProfileID: UserProfileID
        }





route ..> ctrl
ctrl..> service
store..|> repo
service .r.> mapper
service .r.> dto
mapper ..> outdto
userStoryF .u.> dto
service..> factoryInterface
service..left> repo
userStoryF..> usID
userStoryF..>projID
userStoryF..>usTitle
userStoryF..>priority
userStoryF..up>time
userStoryF..>desc
userStoryF..right>userStory
userStoryF..up|>factoryInterface
store ...> assemblerjpa
store ...> USjpa
store ..> jpa



@enduml