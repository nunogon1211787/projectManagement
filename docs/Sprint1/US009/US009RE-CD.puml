@startuml
'https://plantuml.com/class-diagram

'hide circle
skinparam classAttributeIconSize 0

title US009 - As Product Owner, I want to create a user story and add it to the Product Backlog

skinparam classAttributeIconSize 0

package "Infrastructure" <<Folder>> #lightblue  {
class "CreateUserStoryRoute" as route << Component >>
}

package "Interface Adapter" <<Folder>> #lightgreen {
package "Controllers" <<Folder>>{
class "CreateUserStoryController" as ctrl << Component >> {
+createUserStory(json)
}
}
package "Repositories" <<Folder>>{
class "RepoUserStory" as store << Repository >> {
-userStoryList : List<UserStory>
+ save(newUserStory)
+ existsByUserStoryId(tUserStoryId)
'- add(newUserStory)
}
}
}

package "Application Service API/Use Case Service" <<Rectangle>> #lightpink{
package "App Service" <<Folder>>{
class "CreateUserStoryService" as service << Component >> {
+createAndSaveUserStory(dto)
}
}
package "Repositories Interface" <<Folder>>{
interface "IRepoUserStory" as repo << Interface >>{
+ save(newUserStory)
+ existsByUserStoryId(UserStoryId)
}
}
package "Factory Interface" <<Folder>>{
interface "IUserStoryFactory" as factoryInterface << Interface >>{
+createUserStory(projectID, userStoryID, title, \n priority, description, timeEstimate)
}
}
}
package "DTO" <<Folder>> #black {
package "UserStoryDTO" <<Folder>>{
class "UserStoryDTO" as dto << Component >> {
- userStoryID : UserStoryID
- projectID : ProjectID
- title : UsTitle
- priority : UsPriority
- description : Description
- timeEstimate : UsHour
+ getProjectID()
+ getUserStoryID()
+ getTitle()
+ getPriority()
+ getDescription()
+ getTimeEstimate()
}
}
package "DTO" <<Folder>> {
package "OutputUsDTO" <<Folder>>{
class "OutputUsDTO" as outDto << Component >> {
- userStoryID : UserStoryID
- projectID : ProjectID
- title : UsTitle
}
}
package "DTO" <<Folder>> {
package "UserStoryMapper" <<Folder>>{
class "UserStoryMapper" as mapper << Component >> {
+ toDto(newUserStory)
}
}
}

package "Entity/Core/Domain" <<Folder>> #burlywood{
package "Aggregate" <<Folder>>{
class "UserStory" as userStory << Root >> {
- userStoryID : UserStoryID
- projectID : ProjectID
- title : UsTitle
- priority : UsPriority
- description : Description
- timeEstimate : UsHour
+ UserStory(projectID, userStoryID, title, priority, \n description, timeEstimate)
}
}
package "Factory" <<Folder>>{
class "UserStoryFactory" as userStoryF << Factory >> {
+createUserStory(projectID, userStoryID, title, \n priority, description, timeEstimate)
}
}
package "Value Object" <<Folder>>{
class "UserStoryID" as usID << Value Object >> {
-userStoryID : UserStoryID
+checkUsID()
}
}
'package "Value Object" <<Folder>>{
'class "ProjectID" as projID << Value Object >> {
'-rojectID : ProjectID
'+checkUsID()
'}

'package "Value Object" <<Folder>>{
'class "UsTitle" as usTitle << Value Object >> {
'- title : UsTitle
'+checkUsID()
'}

'package "Value Object" <<Folder>>{
'class "Priority" as priority << Value Object >> {
'-priority : UsPriority
'+checkUsID()
'}
'
'package "Value Object" <<Folder>>{
'class "Description" as desc << Value Object >> {
'-description : Description
'+checkUsID()
'}
'
'package "Value Object" <<Folder>>{
'class "TimeEstimate" as time << Value Object >> {
'-timeEstimate : UsHour
'+checkUsID()
'}


route ..> ctrl
'ctrl..> mapper'
ctrl..> service
'mapper..> dto
mapper..>outDto
store..|> repo
service..> mapper
service..> dto
service..> factoryInterface
service..left> repo
userStoryF"1"*-d-"1" usID
'userStoryF..>projID
'userStoryF..>usTitle
'userStoryF..>priority
'userStoryF..>time
'userStoryF..>desc
userStoryF..right>userStory
userStoryF..up|>factoryInterface



@enduml