@startuml
'https://plantuml.com/sequence-diagram

title US033 - As SM/Team Member, I want to register work done on a Task

autoactivate on
autonumber

actor "SM/Team Mamber" as User
participant ": RegisterWorkToTaskUI" as Ui
participant ": RegisterWorkToTaskController" as Ctrl
participant ": Company" as company
participant "RegisterWorkToTaskMapper" as mapper
participant "taskList: TaskList" as taskList
participant "taskEffortDTO: TaskEffortDTO" as effortDTO
participant "user : SystemUserStore" as userStore
participant "task : Task" as task
participant "taskEffort : TaskEffort" as effort

activate User

User->Ui : starts registering a new task effort
Ui->Ctrl: getCurrentProjectsByUserEmail(email)
ref over Ctrl, company : US033_1-SD_getProjects
Ctrl-->Ui:projectCodeDTOList
Ui-->User: asks to select the project

User->Ui: selects the intended project
Ui-->User: projCodeDTO

User->Ui: Access project sprint list (projCodeDTO)
Ui->Ctrl: getProjectSprints(projCodeDTO)
ref over Ctrl, company : US033_2-SD_getSprints
Ctrl-->Ui: sprintIdDTOList
Ui-->User: asks to select the sprint (sprintIdDTO)

User->Ui: selects the intended sprint
Ui-->User: sprintIdDTO

User->Ui: Access sprint backlog
Ui->Ctrl: getUserStories(sprintIdDTO)
ref over Ctrl, company : US033_3-SD_getUserStories
Ctrl-->Ui: userStoryIdDTOList
Ui-->User: asks to select the user story

User->Ui: selects the intended user story
Ui-->User:

User->Ui: Access task list.
Ui->Ctrl: getTasks(userStoryIdDTO)
ref over Ctrl, company : US033_4-SD_getTasks
Ctrl-->Ui: taskIdDTOList
Ui-->User: asks to select the task

User->Ui: selects the intended task
Ui-->User: taskIdDTO

User -> Ui: Starts registration of a new effort.
Ui-->User: requests data(workHours, workDate, comment, attachment)
User -> Ui: types requested data
Ui -> Ctrl: createTaskEffort(taskEffortDTO)
Ctrl->effortDTO: getTaskId()
effortDTO-->Ctrl: taskId
Ctrl->taskList: getTaskById(taskId)
loop for each task in taskList
taskList->task: hasId(taskId)
task-->taskList: true
end
taskList-->Ctrl: task
Ctrl->effortDTO: workHours=getWorkHours()
effortDTO-->Ctrl: workHours
Ctrl->effortDTO: getWorkDate()
effortDTO-->Ctrl: workdate
Ctrl->effortDTO: getComment()
effortDTO-->Ctrl: comment
Ctrl->effortDTO: getAttachment()
effortDTO-->Ctrl: attachment
Ctrl->effortDTO: getEmail()
effortDTO-->Ctrl: email
Ctrl->userStore: getUserByEmail(email)
userStore-->Ctrl: user
Ctrl->task:createTaskEffort(workHours, workDate, comment, attachment, user)
task->effort **: createTaskEffort(workHours, workDate, comment, attachment, user)
task-->Ctrl: effort
Ctrl -> task: saveTaskEffort(effort)
task -> task: validateTaskEffort(effort)
deactivate task
task -> task: add(effort)
deactivate task
task -> task: updateHoursSpent(effort)
deactivate task
task -> task: updateExecutionPercentage()
deactivate task
task-->Ctrl: true
Ctrl -> us: updateWorkDone()
us-->Ctrl: true
Ctrl-->Ui : true

Ui-->User : Informs operation success.
@enduml