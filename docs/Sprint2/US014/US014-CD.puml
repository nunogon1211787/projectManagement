@startuml
'https://plantuml.com/class-diagram

skinparam classAttributeIconSize 0

title US014 - As Director, I want to define SM of a project.



'-------------------INFRASTRUCTURE-----------------------'
package "Infrastructure" <<Rectangle>>  #lightblue {
class "AssignScrumMasterRouter" as router <<Component>>{
}
interface "IResourceJPARepository" as jpaRepo <<Interface>>{
+ findAll()
+ findByID()
}
}


'-------------------INTERFACE ADAPTERS-------------------'
package Interface_Adapters <<Rectangle>> #lightgreen{
package "Controllers" <<Rectangle>> {
class "ResourceController" as Ctrl <<component>> {
+defineProjectRoleOfProject(defineRoleOfResourceDTO)
}
}
package Repositories <<Rectangle>> {
class "ResourceRepository" as projectRepo <<repository>> {
+findAllByProject(projectID)
+findByID(resourceID)
}
}
}

'-------------------APPLICATION SERVICE------------------'
package Application_Service <<Rectangle>> #lightpink {
package IRepositories <<Rectangle>> {
interface "IProjectRepo" as iRepo <<interface>>{
+findAllByProject(projectID)
+findByID(resourceID)
}
}

package "App Service" <<Rectangle>> {
class "ResourceService" as service <<service>> {
+ defineRole(defineRoleOfProject)
+ createResourceIDByStringInputFromController(id)
+ showCurrentResourceByProjectRole(resourceList, \n defineRoleOfResourceDTO)
+ updateProjectRoleOfAResource(resource, defineRoleOfResourceDTO)
}
}
}

package "Data Model" <<Rectangle>> {
class "ResourceJPAAssembler" as assembler <<Component>> {
+ toData (resource)
+ toModel (resourceJPA)
}
class "ResourceJPA" as jpa <<Component>> {
- resourceID : ResourceID
- endDate : String
- percentageOfAllocation : double
- costPerHour : double
- projectRole : String
}
}

'-------------------DOMAIN-------------------------------'
package Domain <<Rectangle>> #burlywood{
package "Aggregates" <<Rectangle>> {
class "Resource" as project <<root>>{
id : ResourceID
endDate : LocalDate
percentageOfAllocation : PercentageOfAllocation
costPerHour : CostPerHour
role : ProjectRole role
+ Resource (id, startDate, percentageOfAllocation, costPerHour, role)
}
}
package "Value Objects" <<Rectangle>> {
class "ResourceID" as projId <<root>>{
- user : UserID
- project : ProjectID
- startDate : LocalDate
+ ResourceID(user, project, startDate)
}
}
}


'-------------------DTO----------------------------------'
package "DTO" <<Rectangle>>{
class "ResourceMapper" as mapper <<component>> {
+ toDomain(resourceJPA)
+ toDTO(resource)
}
class "DefineRoleOfResourceDTO" as projectDTO <<component>>{
- role : String
- startDate : String
- endDate : String
- costPerHour : Double
- percentageOfAllocation : Double
}
class "OutputResourceDTO" as outPutDTO <<component>>{
- user : String
- project : String
- role : String
- startDate : String
- endDate : String
- percentageOfAllocation : String
- costPerHour : String
}
}



'-------------------RELATIONSHIPS------------------------'
router ..> Ctrl
Ctrl ..> service
projectRepo ..|> iRepo
service .l.> iRepo
service .r.> mapper
service .r.> projectDTO
mapper .u.> outPutDTO
Ctrl ..> outPutDTO
project *--> projId
projectRepo <.. jpaRepo

mapper ..> project
projectRepo ..> assembler
projectRepo ..> jpa

@enduml