@startuml
'https://plantuml.com/class-diagram

title US017 - As Authenticated User, I want to get a list of all projects I'm currently allocated to

skinparam classAttributeIconSize 0

package "System" <<Rectangle>> {

package "Infrastructure" <<Rectangle>> #lightblue  {
class "GetCurrentProjectsByUserRoute" as route << Component >>
}

package "Interface Adapters" <<Rectangle>> #lightgreen {
package "Controllers" <<rectangle>>{
class "GetCurrentProjectsByUserController" as ctrl << Component >> {
+getCurrentProjectsBySystemUser()
}
}
package "Repositories" <<rectangle>>{
class "SystemUserStore" as userStore << Repository >> {
-users : List<SystemUser>
+existById()
}
class "ResourceStore" as resStore << Repository >> {
-resources : List<Resource>
+findAll()
}
class "ProjectStore" as projStore << Repository >> {
-projects : List<Project>
+findByProjectId()
}
}
}

package "Application Service" <<Rectangle>> #lightpink{
package "App Services" <<rectangle>>{
class "GetCurrentProjectsByUserService" as srv << Service >> {
+getCurrentProjectsBySystemUser()
}
}
package "IRepositories" <<rectangle>>{
interface "ISystemUserRepository" as userRepo{
existById()
}
interface "IResourceRepository" as resRepo{
findAll()
}
interface "IProjectRepository" as projRepo{
findByProjectId()
}
}
}

package "Domain" <<Rectangle>> #burlywood{
package "Services" <<Rectangle>>{
class "FilterResourcesService" as dsrv <<Service>>{
+getCurrentResources()
+getResourcesByUser()
+getResourceProjects()
}
}
package "Aggregates" <<rectangle>>{
package "SystemUser" <<Rectangle>>{
entity "SystemUser" as user << Root >> {

}
}
package "Resource" <<Rectangle>>{
entity "Resource" as res << Root >>{
-startDate : LocalDate
-endDate : LocalDate
+hasSystemUserId()
+isCurrent()
+getProjectId()
}
}
package "Project" <<Rectangle>>{
entity "Project" as proj << Root >>
}
}
package "Value Object" <<rectangle>>{
class "SystemUserId" as uId << Value Object >> {
systemUserId : Email
}
class "ResourceId" as rId << Value Object >>
class "ProjectId" as pId << Value Object >>{
projectId : ProjectCode
}
}
}

package "DTO" <<rectangle>>{
class "GetCurrentProjectsByUserMapper" as map <<Component>> {
+ data2Dto()
+ model2Dto()
+ dto2Json()
}
class "DataDTO" as dataDto <<Component>>{
+ userId : String
}
class "ProjectDTO" as dto <<Component>>{
+ projectName : String
+ projectCode : String
}

class "ProjectJson" as json <<Component>>{
+ projectName : String
+ projectCode : String
}
}
}

route .d.> ctrl
ctrl .d..> srv
srv .u.> userRepo
srv .u.> resRepo
srv .u.> projRepo
srv ...> dsrv
userRepo <|.u. userStore
resRepo <|.u. resStore
projRepo <|.u. projStore
userStore "1"*----"*" user
resStore "1"*----"*" res
projStore "1"*----"*" proj
dsrv ..> res
user "1"*-d-"1" uId
res "1"*-d-"1" rId
proj "1"*-d-"1" pId
rId "1" o- "1" pId
rId "1" o- "1" uId
ctrl .d.> map
srv .u.> map
map .l.> dto
map .l.> json
map ..> proj
map ..> dataDto

@enduml